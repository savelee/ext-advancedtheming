=== Card

==== What's it?
This layout manages multiple child Components, each fitted to the Container, where only a single child Component can be visible at any given time. This layout style is most commonly used for wizards, tab implementations, etc.

==== Specs

Class: +Ext.layout.container.Card+ (+layout:card+)

[[layouts_card]]
.Card layout
image::images/card.png[]

See also
http://docs.sencha.com/extjs/4.2.1/#!/api/Ext.layout.container.Card

==== Example
[[panels]]
.Example
====
[source, javascript]
----
Ext.create('Ext.panel.Panel', {

    layout : 'card',

    items : [ {
        style: 'background: red'
    }, {
        style: 'background: green'
    }, {
        style: 'background: blue'
    } ],
    buttons : [ {
        text : '<',
        handler : function(b) {
            b.up('panel').getLayout().prev();
        }
    }, {
        text : '>',
        handler : function(b) {
            b.up('panel').getLayout().next();
        }
    } ],

    bodyPadding : 5,
    defaults : {
        xtype: 'component'
    },
    height : 200,
    width : 200,
    renderTo : Ext.getBody()

});
----
====

==== How it works
Since only one panel is displayed at a time, the only way to move from one Component to the next is by calling +setActiveItem()+ on the layout of the Container, passing the next panel to display (or its id or index). The layout itself does not provide a user interface for handling this navigation, so that functionality must be provided by the developer.