=== Hbox

==== What's it?
A light weight horizontal box layout.
This layout optionally divides available horizontal space between child items containing a numeric flex configuration.

==== Specs
Class: +Ext.layout.container.HBox+ (+layout:hbox+)

[[layouts_hbox]]
.Horizontal Box layout
image::images/hbox.png[]

See also
http://docs.sencha.com/extjs/4.2.1/#!/api/Ext.layout.container.HBox

==== Example
[[panels]]

.Example
====
[source, javascript]
----
Ext.create('Ext.panel.Panel', {

    layout : {
        type: 'hbox',
        align: 'middle',
        pack : 'end'
    },

    defaults: {
        style: 'background: red',
        margin: 5,
        xtype: 'container',
        width: 50,
        height: 50
    },
    items : [ {
        html : 'Panel One'
    }, {
        html : 'Panel Two'
    }, {
        html : 'Panel Three'
    } ],

    height : 300,
    width : 500,
    renderTo : Ext.getBody()
});
----
====


==== Height and Width
It's actually not so common to set height and widths on panels.
Because of different screensizes, you rather have your layouts flexible.

==== Flex

To create dynamic (flexible) widths.
For example see <<hbox_flex>>.

Let’s say, if you have a container.  And the left panel takes up 25% height. And the right panel takes up 75%. (that’s together 100%).
In this case, we could say 25% is one 1/4 And 75% is 3/4.
So 1 + 3 = 4.

In that case the left panel would have +flex: 1+.
The right panel would have +flex: 3+.

==== Example

This example first deducts 100px from the total 100%.
Then it calculates the flexes.

[source, javascript]
----
Ext.create('Ext.panel.Panel', {

    layout : {
        type: 'hbox',
        align: 'middle',
        pack : 'end'
    },

    defaults: {
        style: 'background: red',
        margin: 5,
        xtype: 'container',
    },
    items : [ {
        html : 'Panel Left',
        flex: 1
    }, {
        html : 'Panel Two'
        width: 100
    }, {
        html : 'Panel Three',
        flex: 3
    } ],

    height : 300,
    width : 500,
    renderTo : Ext.getBody()
});
----

===== Align
Vertical alignment
* +align+ (defaults to _top_)

+top+ : child items are aligned vertically at the top of the container.
+middle+ : child items are aligned vertically in the middle of the container.
+bottom+ : child items are aligned vertically at the bottom of the container.
+stretch+ : child items are stretched vertically to fill the height of the container.
+stretchmax+ : child items are stretched vertically to the height of the largest item.

===== Pack
Horizontal alignment
* +align+ (defaults to _start_)

+start+ : child items are packed together at the left side of container. 
+center+ : child items are packed together at mid-width of container.
+end+ : child items are packed together at right side of container.