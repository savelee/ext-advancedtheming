=== FormPanel

==== What it is
A panel that is required to hold form fields. Under the covers it has
several mechanisms for sending and validating forms.

==== Specs

===== CSS Class: +.x-panel+

===== +Ext.form.Panel+
Extends from +Ext.panel.Panel+

* Panel Header (+.x-panel-header+)
** +title+
** +glyph+
** +tools+
* Panel Body (+.x-panel-body+)
* (optional) Docked Toolbar (+.x-toolbar+)
** +waitTitle+
** +buttons+
** +height+
** +width+
** +margin+
** +padding+
** +bodyPadding+

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

[[components_formpanels]]
.Ext.form.Panel
image::images/panels.png[]

==== Example
[[panels]]
.Example
====
[source, javascript]
----
Ext.create('Ext.form.Panel', {
    title: 'Simple Form',
    bodyPadding: 5,
    width: 350,

    // The form will submit an AJAX request to this URL when submitted
    url: 'save-form.php',

    // Fields will be arranged vertically, stretched to full width
    layout: 'anchor',
    defaults: {
        anchor: '100%'
    },

    // The fields
    defaultType: 'textfield',
    items: [{
        fieldLabel: 'First Name',
        name: 'first',
        allowBlank: false
    },{
        fieldLabel: 'Last Name',
        name: 'last',
        allowBlank: false
    }],

    // Reset and Submit buttons
    buttons: [{
        text: 'Reset',
        handler: function() {
            this.up('form').getForm().reset();
        }
    }, {
        text: 'Submit',
        formBind: true, //only enabled once the form is valid
        disabled: true,
        handler: function() {
            var form = this.up('form').getForm();
            if (form.isValid()) {
                form.submit({
                    success: function(form, action) {
                       Ext.Msg.alert('Success', action.result.msg);
                    },
                    failure: function(form, action) {
                        Ext.Msg.alert('Failed', action.result.msg);
                    }
                });
            }
        }
    }],
    renderTo: Ext.getBody()
});
----
====


=== Textfield

==== What it is
A plain form field for entering text.
But there is one important difference.
A textfield in Ext JS is the input field plus the label all together.

==== Specs

===== CSS Class: +.x-field-default+ or +.x-form-type-text+

===== +Ext.form.field.Text+
Extends from +Ext.form.field.Base+

* formfield (+.x-field-default+ or +.x-form-type-text+)
* error (+.x-form-invalid+)
** +size+
** +grow+
** +growMin+
** +growMax+
** +emptyText+
** +minLength+
** +maxLength+

http://http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.field.Text-cfg-blankText

[[components_textfield]]
.Ext.form.field.Text
image::images/textfield.png[]

==== Example
[[textfield]]
.Example
====
[source, javascript]
----
Ext.create('Ext.form.Panel', {
    title: 'Contact Info',
    width: 300,
    bodyPadding: 10,
    renderTo: Ext.getBody(),
    items: [{
        xtype: 'textfield',
        name: 'name',
        emptyText: "please enter name",
        fieldLabel: 'Name',
        allowBlank: false  // requires a non-empty value
    }]
});
----
====

=== Textarea

==== What it is
A text field for entering multiple rows of text.
In addition, it supports automatically growing the height of the textarea to fit its content.

==== Specs

===== CSS Class: +.x-field-default+ or +.x-form-type-text+

===== Ext.form.field.TextArea
Extends from +Ext.form.field.Base+

* formfield (+.x-field-default+ or +.x-form-type-text+)
* error (+.x-form-invalid+)
** +rows+
** +cols+
** +growMin+
** +growMax+

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.field.TextArea

[[components_textarea]]
.Ext.form.field.TextArea
image::images/textarea.png[]

==== Example
[[panels]]
.Example
====
[source, javascript]
----
Ext.create('Ext.form.FormPanel', {
    title      : 'Sample TextArea',
    width      : 400,
    bodyPadding: 10,
    renderTo   : Ext.getBody(),
    items: [{
        xtype     : 'textareafield',
        grow      : true,
        name      : 'message',
        fieldLabel: 'Message',
        anchor    : '100%'
    }]
});
----
====

=== Combobox

==== What it is
A ComboBox control (is like a select dropdown) with support for autocomplete, remote loading, and many other features.

A ComboBox is like a combination of a traditional HTML text <input> field and a <select> field; the user is able to type freely into the field, and/or pick values from a dropdown selection list. The user can input any value by default, even if it does not appear in the selection list.

==== Specs

===== CSS Class: +.x-table-plain+ or +.x-form-type-text+

===== Ext.form.field.ComboBox
Extends from +Ext.form.field.Base+

* formfield (+.x-field-default+ or +.x-form-type-text+)
* error (+.x-form-invalid+)
** +growToLongestValue+
* boundlist (+.x-boundlist+)
** +multiSelect+
** +typeAhead+
** +typeAheadDelay+
* arrow trigger (+.x-form-arrow-trigger+)

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.field.ComboBox

[[components_combobox]]
.Ext.form.field.ComboBox
image::images/combobox.png[]

==== Example
[[combo]]
.Example
====
[source, javascript]
----
// The data store containing the list of states
var states = Ext.create('Ext.data.Store', {
    fields: ['abbr', 'name'],
    data : [
        {"abbr":"AL", "name":"Alabama"},
        {"abbr":"AK", "name":"Alaska"},
        {"abbr":"AZ", "name":"Arizona"}
        //...
    ]
});

// Create the combo box, attached to the states data store
Ext.create('Ext.form.ComboBox', {
    fieldLabel: 'Choose State',
    store: states,
    queryMode: 'local',
    displayField: 'name',
    valueField: 'abbr',
    renderTo: Ext.getBody()
});
----
====

=== Checkbox

==== What it is
Single checkbox. To check one or more option boxes.

==== Specs

===== CSS Class: +.x-form-type-checkbox+

===== Ext.form.field.Checkbox
Extends from +Ext.form.field.Base+

* checkbox (+.x-form-type-checkbox+)
* checkbox wrapper (+.x-form-cb-wrap+)
* checkbox (+.x-form-cb+)
** checked
** checkedCls
** fieldCls
* label (+.x-form-cb-label+)
** afterBoxLabelTextTpl
** beforeBoxLabelTextTpl
** boxLabel
** boxLabelAlign
** boxLabelCls

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.field.Checkbox

[[components_checkbox]]
.Ext.form.field.Checkbox
image::images/checkbox.png[]

==== Example
[[checkbox]]
.Example
====
[source, javascript]
----
Ext.create('Ext.form.Panel', {
    items: [
        {
            xtype: 'fieldcontainer',
            fieldLabel: 'Toppings',
            defaultType: 'checkboxfield',
            items: [
                {
                    boxLabel  : 'Anchovies',
                    name      : 'topping',
                    inputValue: '1',
                    id        : 'checkbox1'
                }, {
                    boxLabel  : 'Artichoke Hearts',
                    name      : 'topping',
                    inputValue: '2',
                    checked   : true,
                    id        : 'checkbox2'
                }, {
                    boxLabel  : 'Bacon',
                    name      : 'topping',
                    inputValue: '3',
                    id        : 'checkbox3'
                }
            ]
        }
    ],
    renderTo: Ext.getBody()
});
----
====

=== Radio

==== What it is
Single radio field. Similar to checkbox but pick only one option field.

==== Specs

===== CSS Class: +.x-form-type-radio+

===== Ext.form.field.Radio
Extends from +Ext.form.field.Base+ and +Ext.form.field.CheckBox+

* checkbox (+.x-form-type-radio+)
* checkbox wrapper (+.x-form-cb-wrap+)
* checkbox (+.x-form-cb+)
** checked
** checkedCls
** fieldCls
* label (+.x-form-cb-label+)
** afterBoxLabelTextTpl
** beforeBoxLabelTextTpl
** boxLabel
** boxLabelAlign
** boxLabelCls

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.field.Radio

[[components_radio]]
.Ext.form.field.Radio
image::images/radio.png[]

==== Example
[[radio]]
.Example
====
[source, javascript]
----
Ext.create('Ext.form.Panel', {
    title      : 'Order Form',
    width      : 300,
    bodyPadding: 10,
    renderTo   : Ext.getBody(),
    items: [
        {
            xtype      : 'fieldcontainer',
            fieldLabel : 'Size',
            defaultType: 'radiofield',
            defaults: {
                flex: 1
            },
            layout: 'hbox',
            items: [
                {
                    boxLabel  : 'M',
                    name      : 'size',
                    inputValue: 'm',
                    id        : 'radio1'
                }, {
                    boxLabel  : 'L',
                    name      : 'size',
                    inputValue: 'l',
                    id        : 'radio2'
                }, {
                    boxLabel  : 'XL',
                    name      : 'size',
                    inputValue: 'xl',
                    id        : 'radio3'
                }
            ]
        }
  
    ]
});
----
====

=== Datefield

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Displayfield

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Fileupload

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Numberfield

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Spinnerfield

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Timefield

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Slider

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== Multi Slider

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====

=== HTML Editor

==== What it is
TODO

==== Specs

===== CSS Class: TODO

===== TODO
Extends from +Ext.form.field.Base+

TODO

http://docs.sencha.com/extjs/{vers}/#!/api/Ext.form.Panel

==== Example
[[panels]]
.Example
====
[source, javascript]
----
TODO
----
====