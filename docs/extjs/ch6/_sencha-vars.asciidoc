Sencha CSS Variables
---------------------
=== Sencha CSS Variables
==== Objectives

* Understanding Sencha Global variables
* Understanding Sencha Component variables
* Implementing Sencha CSS variables
* Working with the +app watch+ command

=== Introduction
As we learned from the lecture, Sass variables are very powerful.

[[vars_snippet]]
.Maintain the variables on one place.
====
[source, javascript]
----
$component-bg: blue;
.panel {
	background: $component-bg;
}
----
====

[[vars_snippet2]]
.Compile the Sass Stylesheet for CSS output
====
[source, javascript]
----
.panel { background: blue; }
----
====

=== Sencha CSS variables
Sencha has their own Sass variables set in the *Neutral* theme.
Therefore we can use these CSS variables to customize our own
designs.

[[vars_inheritance]]
.Inheritance tree
image::resources/images/overviewthemes_inheritance1.png[scale="75"]

=== 2 types of variables
.There are 2 types of variables set
+
* Global CSS variables
+
Apply to the overall Stylesheet
* Component CSS variables
+
Apply to an Ext component

=== Global Vars

==== API Docs
Global CSS vars can be found in the API Docs to get
an exact overview.

http://docs.sencha.com/extjs/4.2.1/#!/api/Global_CSS

[[vars_docs]]
.Global CSS vars in the API Docs
image::resources/images/vars_apidocs_global.png[scale="75"]

==== Where to implement
.In the labs we saved all our styles and vars
here: 

[source, javascript]
----
packages/<theme-name>/sass/etc/all.scss
----

We have seen that this file grows and it's getting
harder to maintain. When you want to structure your Stylesheets,
a better a location to save global vars would be:

[source, javascript]
----
packages/<theme-name>/sass/var/Component.scss
----

==== Example: Base-color
The base background color to be used throughout the theme (like backgrounds, panel headers etc...).

*packages/MyTheme/sass/etc/all.scss*
[source, javascript]
----
$base-color: green;
----

[[vars_globalcss1]]
.Set the base color
image::resources/images/vars_globalcss.png[scale="75"]


==== Example: Neutral-color
The neutral background color to be used throughout the theme. (like buttons, headers etc...),
as an alternative to the +$base-color+.
Defaults to: +#dcdcdc+

*packages/MyTheme/sass/etc/all.scss*
[source, javascript]
----
$neutral-color: #ccc
----

[[vars_globalcss01]]
.Set the base color
image::resources/images/vars_globalcss.png[scale="75"]

==== Overview vars

There are much more global vars available.

* _$base-color_
* $base-gradient
* $body-background-color
* $color
* $css-shadow-border-radius
* $font-family
* $font-size
* $image-search-path
* $include-content-box
* $include-default-uis
* $include-not-found-images
* $include-rtl
* _$neutral-color_
* $prefix
* $relative-image-path-for-uis
* $slicer-image-extension
* $theme-resource-path

==== Vars to exclude browsers
By default Ext JS includes all browsers,
these variables are set to +true+. However if you don't support
a particular browser you can disable these so the file size
of your Stylesheet will become smaller.

* $include-chrome
* $include-ff
* $include-ie
* $include-opera
* $include-safari
* $include-webkit

=== Component variables

==== API Docs
Component CSS vars can be found in the API Docs to get
an exact overview.

For example the CSS vars for buttons:
http://docs.sencha.com/extjs/4.2.1/#!/api/Ext.button.Button

[[vars_docs1]]
.Component CSS vars in the API Docs
image::resources/images/vars_apidocs_components.png[scale="75"]

==== Where to implement
.In the labs we saved all our styles and vars
here: 

[source, javascript]
----
packages/<theme-name>/sass/etc/all.scss
----

We have seen that this CSS file grows and it's getting
harder to maintain. When you want to structurize your Stylesheets,
a better a location to save component vars in a structure,
*the same structure* of used by the framework.

[source, javascript]
----
packages/<theme-name>/sass/var/button/Button.scss
----

(Since +Ext.button.Button+ maps to _/src/button/Button.js_)

==== Example: Button
* +$button-default-base-color+: the background color of a button.
* +$button-default-border-color+: the border color of a button.

*packages/MyTheme/sass/var/button/Button.scss*
[source, javascript]
----
$button-default-base-color: green;
$button-default-border-color: blue;
----

[[vars_buttonexample]]
.Button Example
image::resources/images/vars_buttonexample.png[scale="75"]

==== Overview Components with vars
Note that components that inherit from
other components; will also inherit the styles
set by variables.

* Ext.button.Button
* Ext.container.ButtonGroup
* Ext.menu.Menu
* Ext.panel.Panel
* Ext.panel.Table
* Ext.panel.Tool
* Ext.picker.Color
* Ext.picker.Date
* Ext.resizer.Splitter
* Ext.slider.Multi
* Ext.tab.Bar
* Ext.tab.Tab
* Ext.tip.Tip
* Ext.toolbar.Paging
* Ext.toolbar.Toolbar
* Ext.tree.Panel
* Ext.view.BoundList
* Ext.window.MessageBox
* Ext.window.Window
* Ext.LoadMask
* Ext.ProgressBar

==== Form components with vars
* Ext.form.field.Base
* Ext.form.field.Checkbox
* Ext.form.field.Display
* Ext.form.field.HtmlEditor
* Ext.form.field.Radio
* Ext.form.field.Spinner
* Ext.form.field.TextArea
* Ext.form.field.Trigger
* Ext.form.CheckboxGroup
* Ext.form.FieldSet
* Ext.form.field.Spinner

==== Grid components with vars
* Ext.grid.column.Action
* Ext.grid.column.CheckColumn
* Ext.grid.column.Column
* Ext.grid.column.RowNumberer
* Ext.grid.header.Container

=== App Watch

As an alternative to +compass watch+, Sencha Cmd has +sencha app watch+.
Run this command on the CLI and it starts polling for changes.
On every change made in the JavaScript or CSS, the system will auto build
the app for you.

[source, javascript]
----
sencha app watch
----