Overview of all out of the box themes
--------------------------------------

=== Objectives
* Learn theming inheritance
* Overview out of the box themes
* How to switch themes

=== Themes are packages
In Ext JS 4.2, themes, plugins and locales are packages.

Since themes are packages, you can share the themes with other applications.

=== Theme Inheritance
A theme always extends from the base theme. The base theme defines basic things like the layout.

[[styles_createfontpack1]]
.Inheritance tree
image::images/overviewthemes_inheritance1.png[]

=== Overview Themes

==== Base Theme
When creating your own theme, you typically wouldn't extend
from Base, although it is possible.

When you extend from Base, you have to style every Ext JS
component yourself. It will cost you more time but the
result is that you have a fully custom theme.

It contains the bare minimum set of CSS rules that are absolutely required for Ext JS Components and Layouts to work correctly.

The *Base* Theme is subclassed by all other themes.

==== Neutral Theme
Contains all the Sencha variables and style rules
used by the custom themes.

The Neutral theme extends from the *Base* theme.

==== Neptune Theme
Modern borderless theme.

The Neptune theme extends form the *Neutral* theme.

[[overviewthemes_neptune]]
.Neptune theme
image::images/overviewthemes_neptune.png[]

==== Neptune RTL Theme Example

Text from right to left, support.

[[overviewthemes_neptune]]
.Neptune RTL theme
image::images/overviewthemes_neptune_rtl.png[]

==== Classic Theme
Classic theme, replica of the old Ext 3 theme.

The Classic theme also extends form the *Neutral* theme.

[[overviewthemes_classic]]
.Classic theme
image::images/overviewthemes_classic.png[]

==== Classic Themes
Two other themes, gray and accessibility, extend from the classic theme.

[[styles_createfontpack2]]
.Inheritance tree
image::images/overviewthemes_inheritance2.png[]

==== Gray Theme
Classic theme with a gray base color.

The Gray theme extends from the *Classic* theme.

[[overviewthemes_gray]
.Gray theme
image::images/overviewthemes_gray.png[]

==== Accessibility Theme
Classic theme optimized for accessibility.

The Accessibility theme extends from the *Classic* theme.

[[overviewthemes_acces]
.Accessibility theme
image::images/overviewthemes_access.png[]

==== FUTURE: Neptune Touch Theme
Comming soon.

Touch support.
(for example, icons are bigger)

[[overviewthemes_acces]
.Neptune Touch Theme
image::images/overviewthemes_neptune_touch.png[]

==== FUTURE: Crisp Touch Theme
Comming soon.

Touch support.
(for example, icons are bigger)

[[overviewthemes_acces]
.Crisp Touch Theme
image::images/overviewthemes_crisp.png[]

=== Switching themes
When you generate an application with Sencha Cmd,
by default the *Classic* theme is used.

How can you switch themes?

==== Don't touch the <style> tag
What's common in lots of web applications, is not so common in Ext JS.
When you want to switch your theme, you *do not change
the +<style>+* in the _index.html_ file.

[[overviewthemes_switch1]
.Do not change Stylesheet in the index.html
image::images/overviewthemes_switch1.png[]


==== How to switch?
Since Ext 4.2.2. and Sencha Cmd 4,
the easiest way to switch a theme in your application, is by adding the
+"theme"+ property to _myapp/app.json_.

[source, javascript]
----
{
    "name": "ExtReader",

    "requires": [],

    "theme" : "Goggles",
}
----

.Optional values are
* ext-theme-classic
* ext-theme-gray
* ext-theme-access
* ext-theme-neptune
* [your own custom theme?]


==== How to switch?
Before Ext 4.2.2. & Sencha Cmd 4; you had to switch an Ext 4.x theme by opening
a hidden sencha config file.

To configure your app to use a different theme,
change the following line in _[myapp]/.sencha/app/sencha.cfg_

[source, javascript]
----
app.theme=ext-theme-classic
----

==== Example

[[overviewthemes_switch2]
.Switch themes in the sencha.cfg file
image::images/overviewthemes_switch2.png[]

==== Enable hidden files
Can't find the _.sencha_ hidden folder?
Try to enable hidden files in your OS.

.Mac OSX
* Type the following command in your terminal: +
+defaults write com.apple.finder AppleShowAllFiles TRUE+ +
+killall Finder+ +
(running these commands with +FALSE+ will hide the files again)

.Windows 7
* Go to: *Control Panel* > *Appearance and Personalization* >
*Folders Options* > _Link: Show hidden files and folders_ +
* Select the radio button labeled *Show hidden files, folders, and drives.*
* Remove the checkmark from the checkbox labeled *Hide extensions for known file types.*
 * Remove the checkmark from the checkbox labeled *Hide protected operating system files (Recommended).*

[[overviewthemes_showhidden_windows]
.Show hidden files in Windows 7
image::images/appendix_win_showhidden.jpg[]

==== Build Theme
When you have already run a build of the app using the classic theme, you should clean the build directory. 

[source, javascript]
----
sencha ant clean
----

Then build the app:

[source, javascript]
----
sencha app build
----